#Nginx

trigger:
 branches:
   include:
     - main # Indentation is important here

pool:
 name: 'project-pool' # Adjust as needed for your Azure Pipelines agent

variables:
  containerRegistryName: 'your-container-registry-name' 
  imageTag: '$(containerRegistryName).my-nginx:latest' 

stages:
- stage: Build
  jobs:
  - job: BuildImage
    displayName: "Build docker image"
    steps:
    - task: Docker@0
      displayName: "Build an docker image"
      inputs:
        command: build
        dockerfile: '$(Build.SourcesDirectory)/Dockerfile' 
        tags: 'my-nginx:latest'
    - task: Docker@1
      displayName: "Push a Docker image to container registry"
      inputs:
        azureSubscription:
        azureContainerRegistry: '$(containerRegistryName)'
        action: "push an image"
        imageName: "nginx:$(tag)"

- stage: Deploy
  jobs:
  - job: TriggerDeployment  # New job to ensure the stage can run 
    displayName: Trigger Deployment 
    steps: 
    - script: echo "Deployment Triggered" # Placeholder action

  - job: DeployWithCompose 
    dependsOn: TriggerDeployment  # Dependent on the independent trigger
    displayName: Deploy using Docker Compose
    steps:
    - task: DockerCompose@0
      displayName: Deploy with Docker Compose
      inputs:
        azureSubscription: '$(System.DefaultWorkingDirectory)/azure-pipelines.json' # Adjust as needed
        azureContainerRegistry: '$(containerRegistryName)'
        action: 'Run a Docker Compose command'
        dockerComposePath: 'docker-compose.yml' 
        dockerComposeCommand: 'up -d' 
